
<!-- saved from url=(0051)http://www.d.umn.edu/~tcolburn/cs2511/syllabus.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title> Syllabus: CS 2511 Software Analysis and Design </title>
<style type="text/css">:root #content > #right > .dose > .dosesingle,
:root #content > #center > .dose > .dosesingle
{display:none !important;}</style></head>

<body>

<h1> Syllabus: CS 2511 Software Analysis and Design </h1>

<hr>

<h2> <a href="http://www.d.umn.edu/~tcolburn/cs2511/home.html"> Course Web Page </a> </h2>

<h2> <a href="http://www.d.umn.edu/~tcolburn/cs2511/termsched.html"> Term Schedule </a> </h2>

<h2> Course Text: 
     <a href="http://www.horstmann.com/design_and_patterns.html"> 
     Object-Oriented Design and Patterns</a> 
</h2> 

<h2> Course Content and Objectives </h2>

This course follows and requires the freshman introductory sequence CS
1511-1521.  It is intended to provide the background necessary to undertake
serious programming projects that the student will later encounter in
advanced courses, actual jobs, or research.  The course takes up where the
freshman year leaves off in the discipline of object-oriented design and
coding, and introduces Java as the object-oriented programming language.
<p>
Students will acquire skills in the analysis, design, and implementation of
medium-scale software development projects.
Analysis topics include: 
</p><ul>
<li> Problem analysis 
</li><li> Requirements gathering and specification
</li><li> Use case analysis
</li></ul>
Design topics include:
<ul>
<li> Interface types and abstract classes
</li><li> Polymorphism and inheritance
</li><li> Design patterns
</li><li> Frameworks
</li></ul>
Implementation topics include:
<ul>
<li> Using an integrated development environment
</li><li> Implementing and using data structures, including:
     <ul>
     <li> Graphs and graph searching algorithms
     </li><li> State space search
     </li><li> Priority queues and binary heaps
     </li><li> Hash tables
     </li></ul>
</li><li> Building graphical user interfaces
</li><li> Systematically testing and debugging code
</li><li> Using several programming paradigms, including:
     <ul>
     <li> Class-based object-oriented programming (Java 5)
     </li><li> Non-class-based object-oriented programming (Javascript, JQuery)
     </li><li> Functional programming with lambda expressions (Java 8)
     </li></ul>
<!-- <li> Using web authoring tools, including: -->
<!--      <ul> -->
<!--      <li> JQuery -->
<!--      <li> Scalable Vector Graphics (SVG) -->
<!--      </ul> -->
</li></ul>

<h2> Grading Basis </h2>

Grades will be based on the total points earned on
exams, programming assignments, and lab activities.  These points
are broken down as follows:
<p>
</p><center>
<table border="2">
<tbody><tr><th> item
    </th><th> number
    </th><th> points each
    </th><th> total
</th></tr>
<tr><td align="left"> Midterm Exam
    </td><td align="center"> 2
    </td><td align="right"> 100
    </td><td align="right"> 200
</td></tr>
<tr><td align="left"> Final Exam
    </td><td align="center"> 1
    </td><td align="right"> 150
    </td><td align="right"> 150
</td></tr>
<tr><td align="left"> Individual Programming Assignment
    </td><td align="center"> 6
    </td><td align="right"> 30
    </td><td align="right"> 180
</td></tr>
<tr><td align="left"> Lab Exercises
    </td><td align="center"> 13
    </td><td align="right"> 10
    </td><td align="right"> 130
</td></tr>
<tr><td align="left"> Grand Total
    </td><td align="center"> 
    </td><td align="right"> 
    </td><td align="right"> 660
</td></tr>
</tbody></table>
</center>
<br> <br>
The final grades will be based on the 660 point total.  Generally:
<br> <br>

 90% guarantees an A  <br>
 80% guarantees a B  <br>
 70% guarantees a C  <br>
 60% guarantees a D   <br> <br>

These grade cutoffs will never be raised; but they may be lowered.

<h2> Course Organization </h2>

We will meet in large lecture on Tuesdays and Thursdays, when new
material will be presented.  Accompanying readings from the text and web
sources will be
indicated on the course web page.  The midterm exams and final exam
will also be given in large lecture.
Dates are given on the <a href="http://www.d.umn.edu/~tcolburn/cs2511/termsched.html">TERM SCHEDULE.</a>

<p>
You will meet in lab on Mondays, at a time depending on which section you are in, 
where you will be led by a graduate teaching assistant.  Here you will
perform lab exercises and work on individual assignments.
On Fridays you will meet in your discussion section which will also
be led by your TA.  
In these sessions, you will go over lecture material, review for exams,
discuss the individual 
assignments and lab exercises, and learn about the programming tools.  
Midterm exams will also be returned and gone over during these meetings.

</p><h2> Course Policies </h2>

<h3> Lectures </h3>
You are responsible for all material presented in lecture.  Lecture notes
are available from the textbook web page (see above).

<h3> Discussions and Labs </h3>
Your TA will be a Computer
Science Department graduate student.  He or she is your primary source of
help for completing 
programming assignments and for understanding
lecture material covered by the exams.  
There also are weekly 10-point lab exercises.  Working on
these during your lab hour allows you to take advantage of help from your
TA. 

<h3> Exams </h3>

Exams will cover all lecture and reading material.  Coverage and topics will
be given on the course web page well before the time of the exam.  Exams must
be taken on the hour they are scheduled.  They will <i> not </i> be given
early, and can be made up only if <i> documented </i> evidence of medical
emergency or death in the family is presented <i> before </i> the time of the
exam.
<p>
Note: See the <a href="http://www.d.umn.edu/~tcolburn/cs2511/termsched.html"> Term Schedule </a> for the final exam
date.  It will
not be given early.  <i>If you are an international student, do not make
travel plans before this date</i>. 

</p><h3> Individual Assignments </h3>

As indicated, you will be given six individual assignments involving
analysis, design, and implementation of Java programs.
Each assignment will be
thoroughly described on the course web page.

<h3> Submission of Assignments and Lab Exercises </h3>

All lab exercises and assignments must be submitted
electronically, allowing the intructors to both run the code and check for
code duplication. 
For full credit all assignments and lab exercises must be submitted by 8:00
p.m. on the day they are due. 
Assignment due dates are shown on the <a href="http://www.d.umn.edu/~tcolburn/cs2511/termsched.html"> Term Schedule</a>.
More details will be given in the lab and assignment web
pages.

<h4> Development Environment </h4>

The development environment assumed by labs and assignments will be NetBeans.
Although the lab sessions will be held in a PC lab, outside of class you are
encouraged to make use of the workstations in the Computer Science
Department Software Development Lab in Heller 314.

<h4> Collaboration </h4>

All lab exercises and assignments in this course are individual, and just like an
essay or term paper, any work for them is expected to be your own.  You may
discuss an assignment and general approaches to a problem with your
professor, your lab instructor, lab consultants, or your classmates, but <i>
you must analyze, design, and write your programs yourself. </i> You may
consult with others to seek help in debugging, but you may
not collaborate with anyone on the writing of your code.

<p> There will be no collaboration on the 10-point lab exercises.

</p><p> There will be no collaboration on exams.

</p><h4> Late Submissions </h4>

Lab exercises and assignments must be turned in by 8:00 p.m. the days they
are due.  Ample time is given to complete these projects, and the only reason
for being late will be poor time management.  
Late submissions are subject to the following penalties:
<ul>
  <li> One day late: 20% of the total value of the assignment or lab will be deducted
  </li><li> Two days late: 40%
  </li><li> More than two days: 50%
</li></ul>
Late submissions will be accepted through Friday of the last day of the
regular semester; they will not be accepted during finals week.



<h2> Permission to Copy Your Work </h2>

As you may know, the Department of Computer Science has an
ABET-accredited bachelor's degree in CS.  This is an indication of the
strength of our program, and it benefits CS majors and even non-majors
by allowing us to provide strong course offerings.
<p>
In order to retain accreditation, we must periodically collect samples
of student work for each of the courses.  To that end, the department would like your
permission to <b><i>anonymously</i></b> copy samples of your work in this course.
This will be done by eliminating all identification such as names, ID's,
etc. before copying the work.  This is voluntary.  In the past almost all
students have agreed to this, which has been a key factor in retaining
accreditation. 
</p><p>
If you do <i>not</i> want your work copied for this purpose, please send the instructor
an email to that effect.
</p><p>
Thank you for helping with this; it is very much appreciated.


</p><h2> Etc. </h2>
<ul>
<li> <a href="http://www.d.umn.edu/roadmap/">Student Success Roadmap</a>
</li><li> <a href="http://www.d.umn.edu/tutoring/">UMD Tutoring Center</a>
</li><li> As instructor I shall make every attempt to treat all students 
equally, without regard to race, religion, color, sex, handicap, age, 
veteran status, or sexual orientation. To inquire
further about the University's policy on cultural diversity, see the <a href="http://www.d.umn.edu/mlrc/ocd/">
Office of Cultural Diversity</a>.
</li><li>
If you have any disability (either permanent or temporary) that might
affect your ability to perform in this class, please contact <a href="http://www.d.umn.edu/access/">Disability Resources</a>, and
inform me at the
start of the semester.
</li></ul>


<h2> Last Word </h2>
<center>
<b> All excellent things are as difficult as they are rare. </b> -- Benedict Spinoza
</center>

<hr size="5">






</body></html>